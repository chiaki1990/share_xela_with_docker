version: '3.7'

services:
    # サービス名は自由に設定
    web:
        container_name: WebApplicationServer
        # appディレクトリの中から`Dockerfile`を探す
        build: 
          context: ./app
          dockerfile: Dockerfile.prod
        # サービス起動後に入力されるコマンドを設定
        command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 
        # データを永続化させる場合の設定。`host:container`でパスを記載
        volumes:
            - static_volume:/usr/src/app/static_root
            - media_volume:/usr/src/app/media_root
        # 開放するポートを指定。`host:container`でポートを記載
        ports:
            - 8000:8000
        # 環境変数を指定
        environment:
            - DJANGO_SETTINGS_MODULE=config.settings.prod_settings
            - LAUNCH_ENV=DOCKER
        #environmentからenv_fileディレクティブに変更
        env_file: ./app/.env
        depends_on:
            - db
    db:
        container_name: DatabaseServer
        build:
            context: ./postgres
            dockerfile: Dockerfile
        # データベースの永続化
        # ホストのディレクトリにマウントしない様に、先頭に`./`をつけない
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./postgres/sql:/docker-entrypoint-initdb.d
        # su権限を持つ、指定されたユーザーと同じ名前のデータベースを作成
        # valueはdjangoサービスで指定したものと同じ様に記載する
        #environmentからenv_fileディレクティブに変更
        env_file: ./postgres/.env_db

    
    nginx:
        container_name: WebServer
        build: 
            #context: .
            context: ./nginx
            dockerfile: Dockerfile
        volumes: 
            - static_volume:/usr/src/app/static_root
            #- static_volume:/usr/share/nginx/html/static
            - media_volume:/usr/src/app/media_root
        ports:    
            - 80:80
        depends_on: 
            - web


# トップレベルに書く「名前付きvolumes」は複数サービスから参照できる
volumes:
    postgres_data:
    static_volume:
    media_volume: